---
/* src/pages/[lang]/index.astro */
import Layout from "../../layouts/Layout.astro";
import InnovationSection from "../../components/InnovationsSection.astro";
import SmartBedSection from "../../components/SmartBedSection.astro";
import HeroCategoryImages from "../../components/HeroCategoryImages.astro";
import FunctionSection from "../../components/FunctionSection.astro";
import AboutBederly from "../../components/AboutBederly.astro";
import EcosystemSection from "../../components/EcosystemSection.astro";
import ServicesSection from "../../components/ServicesSection.astro";
import TeamSection from "../../components/TeamSection.astro";
import Testimonials from "../../components/Testimonials.astro";
import Footer from "../../components/Footer.astro";
import ProgressSlider from "../../components/ProgressSlider.astro";
import DownloadSection from "../../components/DownloadSection.astro";
import MoreInfoSection from "../../components/MoreInfoSection.astro";
import Medip from "../../components/Medip.astro";
import HOME_QUERY from "../../queries/home";
import { wpQuery } from "../../lib/wp";
import { rewriteWpUrl } from "../../lib/wpUrl";
import PartnersGroup from "../../components/PartnersGroup.astro";

export async function getStaticPaths() {
  return [{ params: { lang: "th" } }, { params: { lang: "en" } }];
}

const { lang } = Astro.params as { lang: "th" | "en" };
const languageFilter = lang.toUpperCase() as "TH" | "EN";
const progressSlug = lang === "en" ? "progress-en" : "progress-th";
const teamSlug = lang === "en" ? "team-en" : "team-th";
const testimonialsSlug = lang === "en" ? "testimonials-en" : "testimonials-th";
const slug = (th: string, en: string) => (lang === "en" ? en : th);
const publicSlug = lang === "en" ? "public-en" : "public-th";
const foundationSlug = lang === "en" ? "foundation-en" : "foundation-th";
const companySlug = lang === "en" ? "company-en" : "company-th";
const eduSlug = lang === "en" ? "edu-en" : "edu-th";
const hospitalSlug = lang === "en" ? "hospital-en" : "hospital-th";
const medipSlug = lang === "en" ? "medip-en" : "medip-th";
const downloadSlug = lang === "en" ? "download-en" : "download-th";

// URIs ที่จะลองใช้หา hero (fallback)
const uriCandidates =
  lang === "en"
    ? ["/", "/home/", "/home", "/en/", "/en"]
    : ["/", "/th/", "/th", "/หน้าแรก/", "/หน้าแรก"];

type Size = { name: string; sourceUrl?: string };
type Img = {
  altText?: string;
  sourceUrl?: string;
  mediaDetails?: { sizes?: Size[] };
};

function normalize(img: any): Img | undefined {
  return img?.node ? img.node : (img ?? undefined);
}

function pickImageUrl(img: any): string | undefined {
  const n = normalize(img);
  if (!n) return undefined;
  const sizes = n.mediaDetails?.sizes ?? [];
  const prefer = ["large", "medium_large", "2048x2048", "1536x1536", "medium"];
  for (const key of prefer) {
    const hit = sizes.find((s) => s?.name === key && s?.sourceUrl);
    if (hit?.sourceUrl) return rewriteWpUrl(hit.sourceUrl);
  }
  return n.sourceUrl ? rewriteWpUrl(n.sourceUrl) : undefined;
}

// ดึง hero ตามภาษา
const LANGUAGE_SPECIFIC_QUERY = /* GraphQL */ `
  query PageByLanguage($language: LanguageCodeFilterEnum!) {
    pages(first: 10, where: { language: $language, status: PUBLISH }) {
      nodes {
        id
        title
        uri
        slug
        isFrontPage
        language {
          code
          name
        }
        hero {
          heroTitle
          heroSubtitle
          heroImage {
            node {
              id
              altText
              sourceUrl
              mediaDetails {
                width
                height
                sizes {
                  name
                  width
                  height
                  sourceUrl
                }
              }
            }
          }
        }
      }
    }
  }
`;

let heroTitle = "";
let heroSubtitle = "";
let heroImgUrl = "";
let foundData = false;
let debugInfo: any = {};

// 1) หา hero จากภาษา
try {
  const languageData = await wpQuery<any>(LANGUAGE_SPECIFIC_QUERY, {
    language: languageFilter,
  });

  const pages = languageData?.pages?.nodes || [];
  debugInfo.allPages = pages.map((p: any) => ({
    title: p.title,
    uri: p.uri,
    slug: p.slug,
    isFrontPage: p.isFrontPage,
    language: p.language?.code,
    hasHero: !!p.hero,
    heroTitle: p.hero?.heroTitle,
  }));

  let targetPage =
    pages.find((p: any) => p.isFrontPage) ||
    pages.find((p: any) => p.hero && (p.hero.heroTitle || p.hero.heroImage)) ||
    pages[0];

  if (targetPage) {
    debugInfo.selectedPage = {
      title: targetPage.title,
      uri: targetPage.uri,
      language: targetPage.language?.code,
    };

    const hero = targetPage.hero;
    if (hero) {
      heroTitle = hero.heroTitle || heroTitle;
      heroSubtitle = hero.heroSubtitle || heroSubtitle;
      heroImgUrl = pickImageUrl(hero.heroImage) || heroImgUrl;
      foundData = !!(heroTitle || heroSubtitle || heroImgUrl);
    }
  }
} catch (e: any) {
  debugInfo.error = e.message;
}

// 2) fallback ด้วย URI ถ้ายังไม่เจอ
if (!foundData) {
  for (const uri of uriCandidates) {
    try {
      const data = await wpQuery<any>(HOME_QUERY, { uri });
      const hero = data?.nodeByUri?.hero;
      if (!hero) continue;

      heroTitle = hero?.heroTitle || heroTitle;
      heroSubtitle = hero?.heroSubtitle || heroSubtitle;
      heroImgUrl = pickImageUrl(hero?.heroImage) || heroImgUrl;

      if (heroTitle || heroSubtitle || heroImgUrl) {
        foundData = true;
        debugInfo.fallbackUri = uri;
        break;
      }
    } catch {
      // try next
    }
  }
}


---

<Layout
  lang={lang}
  showNavLinks={true}
  alternates={[
    { lang: "th", url: "/th" },
    { lang: "en", url: "/en" },
  ]}
>
  <!-- Hero Section - Text overlay on image -->
  <section class="relative min-h-[200px] md:min-h-[200px] lg:min-h-[200px] flex items-center">
    <div class="container-primary relative w-full">
      <div class="relative">
        <div class="relative rounded-[32px] md:rounded-[40px] overflow-hidden shadow-2xl">
          {heroImgUrl ? (
            <>
              <img
                src={heroImgUrl}
                alt=""
                class="w-full h-auto"
                loading="eager"
              />
              
              <div class="absolute inset-0 flex items-end">
                <div class="w-full px-8 md:px-12 lg:px-16 pb-12 md:pb-16 lg:pb-20">
                  <div class="max-w-3xl">
                    <h1 class="text-4xl md:text-5xl lg:text-6xl xl:text-7xl font-bold text-white leading-tight mb-4">
                      {heroTitle.split('\n').map((line, i) => (
                        <>
                          {line}
                          {i < heroTitle.split('\n').length - 1 && <br />}
                        </>
                      ))}
                    </h1>
                    {heroSubtitle && (
                      <p class="text-lg md:text-xl lg:text-2xl text-white/90 leading-relaxed max-w-2xl">
                        {heroSubtitle}
                      </p>
                    )}
                  </div>
                </div>
              </div>
            </>
          ) : (
            <div class="relative h-[600px] md:h-[700px] lg:h-[800px] bg-gradient-to-br from-cyan-500 to-blue-600">
              <div class="absolute inset-0 flex items-end">
                <div class="w-full px-8 md:px-12 lg:px-16 pb-12 md:pb-16 lg:pb-20">
                  <div class="max-w-3xl">
                    <h1 class="text-4xl md:text-5xl lg:text-6xl xl:text-7xl font-bold text-white leading-tight mb-4">
                      {heroTitle.split('\n').map((line, i) => (
                        <>
                          {line}
                          {i < heroTitle.split('\n').length - 1 && <br />}
                        </>
                      ))}
                    </h1>
                    {heroSubtitle && (
                      <p class="text-lg md:text-xl lg:text-2xl text-white/90 leading-relaxed max-w-2xl">
                        {heroSubtitle}
                      </p>
                    )}
                  </div>
                </div>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  </section>

  <!-- Smart Bed -->
  <section id="smartbed" class="pb-0 md:pb-6 lg:pb-8">  
    <SmartBedSection lang={lang} />
  </section>

  <!-- Product Gallery -->
  <section id="gallery" class="pt-4 pb-6 bg-white -mt-6 md:-mt-8 lg:-mt-10">
    <div class="container-primary">
      <HeroCategoryImages
        lang={lang}
        limit={9}
      />
    </div>
  </section>

  <!-- Functions -->
  <section id="functions" class="section-padding bg-white">
    <div class="container-primary">
      <FunctionSection
        lang={lang}
        limit={10}
        class="mt-2"
      />
    </div>
  </section>

  <!-- Innovations -->
  <section id="innovations" class="section-padding bg-white">
    <div class="container-primary">
      <InnovationSection lang={lang} limit={6} />
    </div>
  </section>

  <!-- More Info -->
  <section id="moreinfo">
    <MoreInfoSection lang={lang} limit={2} />
  </section>

  <!-- About Bederly -->
  <section id="about" class="bg-white">
    <AboutBederly lang={lang} pageUriTH="/" pageUriEN="/en/welcome/" />
  </section>

  <section id="ecosystem" class="section-padding bg-white">
    <EcosystemSection
      lang={lang}
      pageUriTH="/"
      pageUriEN="/en/welcome/"
      size="lg"
    />
  </section>

  <section id="progress" class="bg-white">
    <ProgressSlider lang={lang} categorySlug={progressSlug} limit={6} />
  </section>

  <section id="team" class="bg-white">
    <TeamSection lang={lang} categorySlug={teamSlug} />
  </section>

  <section id="testimonials" class="bg-white">
    <Testimonials lang={lang} categorySlug={testimonialsSlug} />
  </section>

  <section class="section-padding container-primary">
    <!-- Partners and Customers -->
    <PartnersGroup
      lang={lang}
      showHeading={true}
      sectionLabel={lang === "en" ? "Public Organizations" : "องค์กรภาครัฐ"}
      categorySlug={slug("public-th", "public-en")}
      class="mb-10"
    />

    <PartnersGroup
      lang={lang}
      sectionLabel={lang === "en" ? "Foundations" : "มูลนิธิ"}
      categorySlug={slug("foundations-th", "foundations-en")}
      class="mb-10"
    />

    <PartnersGroup
      lang={lang}
      sectionLabel={lang === "en" ? "Companies" : "องค์กร"}
      categorySlug={slug("companie-th", "companie-en")}
      class="mb-10"
    />

    <PartnersGroup
      lang={lang}
      sectionLabel={lang === "en" ? "Educational Institutions" : "สถาบันการศึกษา"}
      categorySlug={slug("education-th", "education-en")}
      class="mb-10"
    />

    <PartnersGroup
      lang={lang}
      sectionLabel={lang === "en" ? "Hospital" : "โรงพยาบาล"}
      categorySlug={slug("hospital-th", "hospital-en")}
    />
  </section>
  
  <section id="medip" class="bg-white">
    <Medip lang={lang} categorySlug={medipSlug} />
  </section>

  <section id="download" class="bg-white">
    <DownloadSection lang={lang} />
  </section>

  <section id="footer">
    <Footer lang={lang} />
  </section>
</Layout>

<style>
  /* Text shadow for better readability on image */
  h1 {
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.4), 0 4px 16px rgba(0, 0, 0, 0.3);
  }
  
  p {
    text-shadow: 0 1px 4px rgba(0, 0, 0, 0.3), 0 2px 8px rgba(0, 0, 0, 0.2);
  }

  /* Ensure container maintains proper spacing */
  .container-primary {
    @apply mx-auto px-2 sm:px-4 lg:px-6;
    max-width: 1400px;
  }
</style>