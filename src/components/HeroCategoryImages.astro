---
// src/components/HeroCategoryImages.astro
import { wpQuery } from "../lib/wp";
import { rewriteWpUrl } from "../lib/wpUrl";

export interface Props {
  lang: "th" | "en";
  limit?: number;
  class?: string;
}

const { lang = "th", limit = 9, class: klass = "" } = Astro.props;

/* ---------- utilities ---------- */
function fix(src?: string) { return src ? rewriteWpUrl(src) : src; }
function toSrcSet(sizes?: Array<{ sourceUrl: string; width: number }>) {
  if (!sizes?.length) return undefined;
  return sizes
    .filter((s) => s?.sourceUrl && s?.width)
    .sort((a, b) => (Number(b.width) || 0) - (Number(a.width) || 0))
    .map((s) => `${fix(s.sourceUrl)} ${s.width}w`)
    .join(", ");
}
function bestUrl(img?: any): string | undefined {
  if (!img?.mediaDetails?.sizes) return fix(img?.sourceUrl);
  const sizes = img.mediaDetails.sizes;
  const prefer = ["2048x2048", "1536x1536", "large", "medium_large"];
  for (const n of prefer) {
    const s = sizes.find((x: any) => x?.name === n);
    if (s?.sourceUrl && s?.width >= 800) return fix(s.sourceUrl);
  }
  const max = sizes
    .filter((s: any) => s?.sourceUrl && s?.width)
    .sort((a: any, b: any) => (b.width || 0) - (a.width || 0))[0];
  return fix(max?.sourceUrl || img?.sourceUrl);
}

/* ---------- เลือก slug ของหมวด Hero ตามภาษา ---------- */
const heroSlug = lang === "en" ? "hero-en" : "hero-th";

/* ---------- ดึงโพสต์เฉพาะ hero ---------- */
const POSTS_BY_HERO_SLUG = /* GraphQL */ `
  query PostsByHeroSlug($first:Int!,$slug:String!){
    posts(
      first:$first
      where:{
        status:PUBLISH
        orderby:{field:DATE,order:ASC}
        categoryName:$slug
      }
    ){
      nodes{
        id
        title
        excerpt
        categories{ nodes{ name slug } }
        featuredImage{
          node{
            sourceUrl
            altText
            mediaDetails{ sizes{ name width height sourceUrl } }
          }
        }
      }
    }
  }
`;

let posts: any[] = [];
let debug: string | undefined;

try {
  const res = await wpQuery<any>(POSTS_BY_HERO_SLUG, { first: limit, slug: heroSlug });
  posts = (res?.posts?.nodes ?? []).filter((p: any) => p?.featuredImage?.node?.sourceUrl);
} catch (e: any) {
  debug = e?.message ?? "WPGraphQL fetch failed";
}

/* ---------- Fallback ---------- */
const fallbackImg = `data:image/svg+xml;utf8,${encodeURIComponent(`
<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 800 600'>
  <rect width='800' height='600' fill='none'/>
</svg>`)}`;

const fallback = [
  { title: lang === 'en' ? 'Left-right tilt' : 'ปรับเอียงซ้าย-ขวา', image: fallbackImg },
  { title: lang === 'en' ? 'Height adjustment' : 'ปรับความสูง', image: fallbackImg },
  { title: lang === 'en' ? 'Leg section up/down' : 'ปรับส่วนขาขึ้น-ลง', image: fallbackImg },
  { title: lang === 'en' ? 'Safety side rails' : 'ราวป้องกันด้านข้าง', image: fallbackImg },
  { title: lang === 'en' ? 'Electric remote control' : 'รีโมทคอนโทรลไฟฟ้า', image: fallbackImg },
  { title: lang === 'en' ? 'Durable caster wheels' : 'ล้อเลื่อนทนทาน', image: fallbackImg },
];

const display = posts.length ? posts : fallback;
const originalCount = display.length;

/* ทำให้หาร 3 ลงตัวเสมอ (สำหรับ desktop) */
const rem = display.length % 3;
const pad = rem === 0 ? 0 : 3 - rem;
const padded = pad ? display.concat(display.slice(0, pad)) : display;
const grouped: any[] = [];
for (let i = 0; i < padded.length; i += 3) grouped.push(padded.slice(i, i + 3));
---


{grouped.length > 0 && (
  <section data-slider class={`hero-gallery-section relative ${klass} bg-transparent`}>
    <div class="relative pb-10 bg-transparent">
      <div id="hero-slider" class="overflow-hidden shadow-none bg-transparent">
        <div id="slides-container" class="flex transition-transform duration-500 ease-in-out bg-transparent" style="transform: translateX(0%)">
          {grouped.map((g, gi) => (
            <div class="slide-group w-full flex-shrink-0 bg-transparent">
              <div class="grid grid-cols-1 md:grid-cols-3 gap-6 md:gap-8 items-stretch bg-transparent">
                {g.map((it, ii) => {
                  const globalIndex = gi * 3 + ii;
                  const isOriginal = globalIndex < originalCount;
                  const img = (it as any).featuredImage?.node;
                  
                  if (img) {
                    const src = bestUrl(img);
                    const srcset = toSrcSet(img.mediaDetails?.sizes);
                    return (
                      <div 
                        class="hero-card relative shadow-none overflow-hidden bg-transparent" 
                        data-original={isOriginal ? "true" : "false"}
                        data-index={globalIndex}
                      >
                        <div class="aspect-box relative aspect-[4/3] bg-transparent overflow-hidden rounded-xl">
                          <img
                            src={src}
                            srcset={srcset}
                            sizes="(max-width:768px) 100vw, 33vw"
                            alt={img.altText || (it as any).title}
                            loading={gi === 0 && ii < 3 ? "eager" : "lazy"}
                            decoding="async"
                            class="absolute inset-0 w-full h-full object-cover"
                          />
                        </div>
                        <div class="pointer-events-none absolute left-1/2 -translate-x-1/2 bottom-3">
                          <span class="pointer-events-auto inline-block rounded-full bg-[#40B4ED] text-white text-sm md:text-base font-medium px-6 md:px-8 py-2 shadow-md whitespace-nowrap">
                            <span set:html={(it as any).title} />
                          </span>
                        </div>
                      </div>
                    );
                  }
                  return (
                    <div 
                      class="hero-card relative shadow-none overflow-hidden bg-transparent" 
                      data-original={isOriginal ? "true" : "false"}
                      data-index={globalIndex}
                    >
                      <div class="aspect-box relative aspect-[4/3] bg-transparent overflow-hidden rounded-xl">
                        <img src={(it as any).image} alt={(it as any).title} class="absolute inset-0 w-full h-full object-cover" />
                      </div>
                      <div class="pointer-events-none absolute left-1/2 -translate-x-1/2 bottom-3">
                        <span class="pointer-events-auto inline-block rounded-full bg-[#40B4ED] text-white text-sm md:text-base font-medium px-6 md:px-8 py-2 shadow-md">
                          {(it as any).title}
                        </span>
                      </div>
                    </div>
                  );
                })}
              </div>
            </div>
          ))}
        </div>
      </div>

      {grouped.length > 1 && (
        <>
          <button id="prev-slide" aria-label="Previous"
            class="absolute left-2 md:left-3 top-1/2 -translate-y-1/2 w-10 h-10 md:w-11 md:h-11 bg-white rounded-full shadow-lg hover:shadow-xl hover:scale-105 transition-all grid place-items-center z-20">
            <svg class="w-5 h-5 text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
          </button>
          <button id="next-slide" aria-label="Next"
            class="absolute right-2 md:right-3 top-1/2 -translate-y-1/2 w-10 h-10 md:w-11 md:h-11 bg-white rounded-full shadow-lg hover:shadow-xl hover:scale-105 transition-all grid place-items-center z-20">
            <svg class="w-5 h-5 text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </button>
        </>
      )}

      {grouped.length > 1 && (
        <div id="dots-container" class="absolute -bottom-1 left-1/2 -translate-x-1/2 flex gap-2 z-10"></div>
      )}
    </div>
  </section>
)}

<script define:vars={{ originalCount }}>
document.addEventListener('DOMContentLoaded', () => {
  const slidesContainer = document.getElementById('slides-container');
  const prevButton = document.getElementById('prev-slide');
  const nextButton = document.getElementById('next-slide');
  const dotsContainer = document.getElementById('dots-container');
  if (!slidesContainer) return;

  const isMobile = window.matchMedia('(max-width: 767.98px)').matches;

  const slideGroups = Array.from(slidesContainer.querySelectorAll('.slide-group'));
  const allCards = Array.from(slidesContainer.querySelectorAll('.hero-card'));
  
  const originalCards = allCards.filter(card => 
    card.getAttribute('data-original') === 'true'
  );

  const totalSlides = isMobile ? originalCards.length : slideGroups.length;
  let current = 0;
  let timer;
  const delay = 6000;

  if (dotsContainer) {
    dotsContainer.innerHTML = '';
    for (let i = 0; i < totalSlides; i++) {
      const dot = document.createElement('button');
      dot.type = 'button';
      dot.className = 'w-2.5 h-2.5 rounded-full bg-gray-300 transition-all';
      dot.addEventListener('click', () => { go(i); stop(); start(); });
      dotsContainer.appendChild(dot);
    }
  }

  const setDots = () => {
    if (!dotsContainer) return;
    const dots = dotsContainer.querySelectorAll('button');
    dots.forEach((d, i) => {
      d.className = i === current
        ? 'w-2.5 h-2.5 rounded-full bg-[#40B4ED] transition-all'
        : 'w-2.5 h-2.5 rounded-full bg-gray-300 hover:bg-gray-400 transition-all';
    });
  };

  const go = (i) => {
    current = (i + totalSlides) % totalSlides;
    slidesContainer.style.transform = `translateX(-${current * 100}%)`;
    setDots();
  };

  const next = () => go(current + 1);
  const prev = () => go(current - 1);
  const start = () => { if (totalSlides > 1) timer = setInterval(next, delay); };
  const stop = () => clearInterval(timer);

  prevButton?.addEventListener('click', () => { prev(); stop(); start(); });
  nextButton?.addEventListener('click', () => { next(); stop(); start(); });

  let startX = 0;
  let dragging = false;
  slidesContainer.addEventListener('touchstart', (e) => { 
    startX = e.touches[0].clientX; 
    dragging = true; 
    stop(); 
  }, { passive: true });
  
  slidesContainer.addEventListener('touchend', (e) => {
    if (!dragging) return;
    const endX = e.changedTouches[0].clientX;
    const diff = startX - endX;
    if (Math.abs(diff) > 50) diff > 0 ? next() : prev();
    dragging = false; 
    start();
  });

  document.addEventListener('keydown', (e) => {
    if (e.key === 'ArrowLeft') { prev(); stop(); start(); }
    else if (e.key === 'ArrowRight') { next(); stop(); start(); }
  });

  start();
  setDots();
});
</script>

<style>
/* ========== BASE STYLES ========== */
[data-slider] { 
  position: relative; 
}

#slides-container { 
  transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1); 
}

button:focus-visible { 
  outline: 2px solid #40B4ED; 
  outline-offset: 2px; 
}

.hero-card .aspect-box {
  aspect-ratio: 4/3;
  background-color: #f9fafb;
}

.hero-card .aspect-box > img {
  object-fit: contain;
}

#prev-slide,
#next-slide {
  top: 40% !important;
}


/* ========== MOBILE ONLY ========== */
@media (max-width: 767.98px) {
  /* Section - ขยายเต็มจอ */
  .hero-gallery-section {
    width: 100vw !important;
    max-width: 100vw !important;
    margin-left: calc(-50vw + 50%) !important;
    margin-right: calc(-50vw + 50%) !important;
    padding: 0 0.5rem !important;
    overflow-x: hidden !important;

    /* ระยะระหว่างสไลด์ */
    --slide-gap: 20px;
  }

  /* Inner wrapper */
  .hero-gallery-section > div {
    padding: 0 !important;
    padding-bottom: 2rem !important;
    margin: 0 !important;
    max-width: 100% !important;
    overflow-x: hidden !important;
  }

  /* Hero slider */
  #hero-slider {
    border-radius: 0 !important;
    box-shadow: none !important;
    overflow: visible !important;
    padding: 0 !important;
    margin: 0 !important;
    max-width: 100% !important;
  }

  /* Slides container */
  #slides-container {
    display: flex !important;
    flex-wrap: nowrap !important;
    gap: var(--slide-gap) !important;
    padding: 0 !important;
    padding-left: calc(var(--slide-gap) / 2) !important;
    padding-right: calc(var(--slide-gap) / 2) !important;
    margin: 0 !important;
    max-width: 100% !important;
  }

  /* ทำลายโครง group */
  .slide-group,
  .slide-group > div {
    display: contents !important;
  }

  /* Card */
  .hero-card {
    min-width: 100% !important;
    width: calc(100% - var(--slide-gap)) !important;
    max-width: calc(100% - var(--slide-gap)) !important;
    flex: 0 0 calc(100% - var(--slide-gap)) !important;
    flex-shrink: 0 !important;
    padding: 0 !important;
    margin: 0 0 1rem 0 !important;
    box-sizing: border-box !important;
  }

  /* Box รูป */
  .hero-card .aspect-box {
    width: 100% !important;
    max-width: 100% !important;
    height: 200px !important;
    aspect-ratio: auto !important;
    border-radius: 14px !important;
    background-color: #f9fafb !important;
    margin: 0 !important;
    padding: 0 !important;
    box-sizing: border-box !important;
    overflow: hidden !important;
  }

  /* รูป */
  .hero-card .aspect-box > img {
    width: 100% !important;
    height: 100% !important;
    object-fit: contain !important;
  }

  /* ข้อความ */
  .hero-card > div:last-child {
    position: static !important;
    transform: none !important;
    margin-top: 0.75rem !important;
    text-align: center !important;
  }

  .hero-card > div:last-child span {
    font-size: 0.875rem !important;
    padding: 0.5rem 1.25rem !important;
  }

  /* ปุ่ม */
  #prev-slide { left: 1rem !important; top: 25% !important; }
  #next-slide { right: 1rem !important; top: 25% !important; }

  /* จุดล่าง */
  #dots-container { bottom: 0.25rem !important; }

  /* === FIX: ดัน Gallery (#gallery) ให้ชิด SmartBed บนมือถือ === */
  section#smartbed,
  #smartbed {
    padding-bottom: 0 !important;
    margin-bottom: 0 !important;
  }

  section#gallery,
  #gallery {
    padding-top: 0 !important;
    margin-top: 0 !important;
  }

  #gallery .container-primary,
  #gallery .container,
  #gallery > div {
    padding-top: 0 !important;
    margin-top: 0 !important;
  }

  #gallery .container-primary > *:first-child,
  #gallery > *:first-child {
    margin-top: 0 !important;
  }

  /* ถ้ายังไม่ชิดพอ ดันขึ้นอีกหน่อย */
  #gallery {
    margin-top: -12px !important; /* ปรับ -8 ถึง -20 ได้ */
  }
}


/* ========== DESKTOP ONLY ========== */
@media (min-width: 768px) {
  /* อนุญาตให้ล้นออกด้านบนได้ */
  .hero-gallery-section {
    overflow: visible !important;
    padding-top: 0 !important;
  }

  /* ชั้น wrapper ภายใน ให้ล้นได้เช่นกัน */
  .hero-gallery-section > .relative {
    overflow: visible !important;
    padding-top: 0 !important;
  }

  /* ตัวสไลเดอร์ไม่ต้องมีเงา/กรอบ และปล่อยให้ล้น */
  #hero-slider {
    box-shadow: none !important;
    border: 0 !important;
    overflow: visible !important;
  }

  /* การ์ดและกล่องรูป: ตัดพื้นหลัง/มุมโค้ง/เงา ออก */
  .hero-card {
    box-shadow: none !important;
    overflow: visible !important;
  }

  .hero-card .aspect-box {
    background: transparent !important;
    border-radius: 0 !important;
  }

  /* ดันรูปให้ทับขอบบนเล็กน้อย */
  .hero-card .aspect-box > img {
    transform: translateY(-22px) !important;
  }

  /* ปุ่มเลื่อน */
  #prev-slide,
  #next-slide {
    top: 36% !important;
  }

  /* เผื่อมีเงา/เส้นจากธีมอื่น ให้ล้นสะอาด ๆ */
  .hero-gallery-section,
  .hero-gallery-section > .relative,
  #hero-slider,
  .hero-card {
    overflow: visible !important;
    box-shadow: none !important;
    border: 0 !important;
  }
}


/* ========== DESKTOP: ระยะระหว่างกลุ่มสไลด์ ========== */
@media (min-width: 768px) {
  #slides-container .slide-group {
    box-sizing: border-box;
  }
  #slides-container .slide-group + .slide-group {
    border-left: 24px solid transparent; /* ปรับ 16–32px ได้ */
  }
}
</style>
