---
import { wpQuery } from "../lib/wp";
import { rewriteWpUrl } from "../lib/wpUrl";

export interface Props {
  lang: "th" | "en";
  categorySlug?: string;
  limit?: number;
  class?: string;
}

const { lang = "th", categorySlug = "hero", limit = 6, class: klass = "" } = Astro.props;

// ลองหลายชื่อ category เผื่อใน WordPress เป็นตัวใหญ่หรือแตกต่าง
const categoryNames = [categorySlug, categorySlug.toLowerCase(), categorySlug.toUpperCase(), "Hero", "hero", "bed", "products"];

/** Query โพสต์ตามหมวดและภาษา */
const POSTS_BY_CATEGORY = /* GraphQL */ `
  query PostsByCategory($first: Int!, $category: String!, $language: LanguageCodeFilterEnum) {
    posts(
      first: $first
      where: { 
        categoryName: $category, 
        orderby: { field: DATE, order: ASC },
        status: PUBLISH,
        language: $language
      }
    ) {
      nodes {
        id
        title
        uri
        slug
        excerpt
        language {
          code
          name
        }
        categories {
          nodes { name slug }
        }
        featuredImage {
          node {
            id
            sourceUrl
            altText
            mediaDetails {
              width
              height
              sizes { 
                name 
                width 
                height
                sourceUrl 
              }
            }
          }
        }
      }
    }
  }
`;

let posts: any[] = [];
let foundCategory = "";

// แปลง lang เป็น GraphQL enum
const languageFilter = lang.toUpperCase() as "TH" | "EN";

// ลอง query แต่ละชื่อ category
for (const catName of categoryNames) {
  try {
    const res = await wpQuery<any>(POSTS_BY_CATEGORY, {
      first: limit,
      category: catName,
      language: languageFilter,
    });
    
    const foundPosts = (res?.posts?.nodes ?? []).filter((p: any) => {
      return p?.featuredImage?.node?.sourceUrl;
    });
    
    if (foundPosts.length > 0) {
      posts = foundPosts;
      foundCategory = catName;
      break;
    }
  } catch (err) {
    continue;
  }
}

// ถ้าไม่เจอเลย ลองเอาโพสต์ทั้งหมดที่มีรูป (ตามภาษา)
if (posts.length === 0) {
  try {
    const FALLBACK_QUERY = /* GraphQL */ `
      query FallbackPosts($first: Int!, $language: LanguageCodeFilterEnum) {
        posts(
          first: $first
          where: { 
            orderby: { field: DATE, order: ASC },
            status: PUBLISH,
            hasPassword: false,
            language: $language
          }
        ) {
          nodes {
            id
            title
            uri
            slug
            excerpt
            language {
              code
              name
            }
            categories {
              nodes { name slug }
            }
            featuredImage {
              node {
                id
                sourceUrl
                altText
                mediaDetails {
                  width
                  height
                  sizes { 
                    name 
                    width 
                    height
                    sourceUrl 
                  }
                }
              }
            }
          }
        }
      }
    `;
    
    const fallbackRes = await wpQuery<any>(FALLBACK_QUERY, { 
      first: limit, 
      language: languageFilter 
    });
    posts = (fallbackRes?.posts?.nodes ?? []).filter((p: any) => {
      return p?.featuredImage?.node?.sourceUrl;
    });
    foundCategory = "fallback";
  } catch (err) {
    posts = [];
  }
}

function fix(src?: string) {
  return src ? rewriteWpUrl(src) : src;
}

function toSrcSet(sizes?: Array<{ sourceUrl: string; width: number }>) {
  if (!sizes?.length) return undefined;
  return sizes
    .filter((s) => s?.sourceUrl && s?.width)
    .sort((a, b) => (Number(b.width) || 0) - (Number(a.width) || 0))
    .map((s) => `${fix(s.sourceUrl)} ${s.width}w`)
    .join(", ");
}

function getBestImageUrl(imageNode?: any): string | undefined {
  if (!imageNode?.mediaDetails?.sizes) {
    return fix(imageNode?.sourceUrl);
  }
  
  const sizes = imageNode.mediaDetails.sizes;
  const preferredSizes = ["2048x2048", "1536x1536", "large", "medium_large"];
  
  for (const sizeName of preferredSizes) {
    const size = sizes.find((s: any) => s?.name === sizeName);
    if (size?.sourceUrl && size?.width >= 800) {
      return fix(size.sourceUrl);
    }
  }
  
  const largest = sizes
    .filter((s: any) => s?.sourceUrl && s?.width)
    .sort((a: any, b: any) => (b.width || 0) - (a.width || 0))[0];
    
  return fix(largest?.sourceUrl || imageNode?.sourceUrl);
}

// ถ้าไม่มีโพสต์จาก WordPress ใช้ข้อมูล fallback เหมือนในรูป
const fallbackFeatures = [
  {
    title: lang === "en" ? "Left-right side lift adjustment" : "ปรับเอียงซ้าย-ขวา",
    image: "/api/placeholder/400/300",
    id: "adjust-lr"
  },
  {
    title: lang === "en" ? "Height adjustment" : "ปรับความสูง", 
    image: "/api/placeholder/400/300",
    id: "adjust-height"
  },
  {
    title: lang === "en" ? "Leg section up-down adjustment" : "ปรับส่วนขาขึ้น-ลง",
    image: "/api/placeholder/400/300", 
    id: "adjust-leg"
  }
];

// ใช้โพสต์จาก WP หรือ fallback
const displayPosts = posts.length > 0 ? posts : fallbackFeatures;
---

{displayPosts.length > 0 && (
  <section data-hero-cat class={`relative ${klass}`}>
    <div class="relative">
      <!-- แถวภาพแบบเหมือนในรูป -->
      <div 
        class="grid md:grid-cols-3 gap-6 max-w-6xl mx-auto"
        aria-label="Smart bed features gallery"
        id="hero-features-grid"
      >
        {displayPosts.slice(0, 3).map((item, index) => {
          // สำหรับ WordPress posts
          if (item.featuredImage) {
            const img = item.featuredImage.node;
            const src = getBestImageUrl(img);
            const srcset = toSrcSet(img.mediaDetails?.sizes);
            
            return (
              <div class="bg-white rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105 group">
                <div class="aspect-[4/3] overflow-hidden relative">
                  <img
                    src={src}
                    alt={img.altText || item.title}
                    loading={index < 3 ? "eager" : "lazy"}
                    decoding="async"
                    class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
                    srcset={srcset}
                    sizes="(min-width: 768px) 33vw, 100vw"
                  />
                </div>
                
                {/* Text label - เหมือนในรูป */}
                <div class="p-4">
                  <div class="bg-gradient-to-r from-cyan-500 to-blue-600 text-white px-4 py-3 rounded-full text-center shadow-md">
                    <h3 class="font-semibold text-sm leading-tight" set:html={item.title} />
                  </div>
                </div>
              </div>
            );
          }
          
          // สำหรับ fallback features
          return (
            <div class="bg-white rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105 group">
              <div class="aspect-[4/3] overflow-hidden relative bg-gradient-to-br from-blue-100 to-cyan-100">
                <img
                  src={item.image}
                  alt={item.title}
                  loading={index < 3 ? "eager" : "lazy"}
                  decoding="async"
                  class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
                />
              </div>
              
              {/* Text label - เหมือนในรูป */}
              <div class="p-4">
                <div class="bg-gradient-to-r from-cyan-500 to-blue-600 text-white px-4 py-3 rounded-full text-center shadow-md">
                  <h3 class="font-semibold text-sm leading-tight">
                    {item.title}
                  </h3>
                </div>
              </div>
            </div>
          );
        })}
      </div>

      <!-- หากมีรูปเพิ่มเติม แสดงเป็น carousel ด้านล่าง -->
      {displayPosts.length > 3 && (
        <div class="mt-12">
          <div 
            class="flex gap-4 overflow-x-auto scroll-smooth snap-x snap-mandatory pb-6"
            style="scrollbar-width: none; -webkit-scrollbar: { display: none; }"
            aria-label="Additional smart bed features"
            id="additional-features-slider"
          >
            {displayPosts.slice(3).map((item, index) => {
              if (item.featuredImage) {
                const img = item.featuredImage.node;
                const src = getBestImageUrl(img);
                
                return (
                  <div class="snap-center shrink-0 bg-white rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 min-w-[280px]">
                    <div class="aspect-[4/3] overflow-hidden relative">
                      <img
                        src={src}
                        alt={img.altText || item.title}
                        loading="lazy"
                        decoding="async"
                        class="w-full h-full object-cover"
                      />
                    </div>
                    
                    <div class="p-4">
                      <div class="bg-gradient-to-r from-cyan-500 to-blue-600 text-white px-4 py-3 rounded-full text-center shadow-md">
                        <h3 class="font-semibold text-sm leading-tight" set:html={item.title} />
                      </div>
                    </div>
                  </div>
                );
              }
              
              return (
                <div class="snap-center shrink-0 bg-white rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 min-w-[280px]">
                  <div class="aspect-[4/3] overflow-hidden relative bg-gradient-to-br from-blue-100 to-cyan-100">
                    <img
                      src={item.image}
                      alt={item.title}
                      loading="lazy"
                      decoding="async"
                      class="w-full h-full object-cover"
                    />
                  </div>
                  
                  <div class="p-4">
                    <div class="bg-gradient-to-r from-cyan-500 to-blue-600 text-white px-4 py-3 rounded-full text-center shadow-md">
                      <h3 class="font-semibold text-sm leading-tight">
                        {item.title}
                      </h3>
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        </div>
      )}
    </div>
  </section>
)}

<style is:global>
  [data-hero-cat] #additional-features-slider::-webkit-scrollbar { 
    display: none; 
  }
  
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Enhanced hover effects */
  .group:hover .group-hover\:scale-110 {
    transform: scale(1.1);
  }

  /* Smooth transitions */
  * {
    transition-property: transform, box-shadow, background-color;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
</style>