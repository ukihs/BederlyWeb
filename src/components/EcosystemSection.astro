---
import { wpQuery } from "../lib/wp";
import { rewriteWpUrl } from "../lib/wpUrl";

export interface Props {
  lang: "th" | "en";
  pageUriTH?: string;
  pageUriEN?: string;
  class?: string;
}

const {
  lang,
  pageUriTH = "/",
  pageUriEN = "/en/welcome/",
  class: klass = "",
} = Astro.props;

const uri = lang === "en" ? pageUriEN : pageUriTH;

const QUERY = /* GraphQL */ `
  query EcosystemByUri($uri: String!) {
    nodeByUri(uri: $uri) {
      ... on Page {
        id
        title
        ecosystem {
          ecotitle
          ecoimage {
            node {
              altText
              sourceUrl
              mediaDetails {
                sizes { name sourceUrl }
              }
            }
          }
        }
      }
    }
  }
`;

function pickImageUrl(img: any): string | undefined {
  const node = img?.node ?? img;
  if (!node) return;
  const sizes = node.mediaDetails?.sizes ?? [];
  const prefer = ["2048x2048", "large", "1536x1536", "medium_large", "medium"];
  for (const key of prefer) {
    const hit = sizes.find((s) => s?.name === key && s?.sourceUrl);
    if (hit?.sourceUrl) return rewriteWpUrl(hit.sourceUrl);
  }
  return node.sourceUrl ? rewriteWpUrl(node.sourceUrl) : undefined;
}

let title = "";
let bgUrl = "";
let gqlError = "";

try {
  const res = await wpQuery<any>(QUERY, { uri });
  const eco = res?.nodeByUri?.ecosystem ?? null;

  if (eco) {
    title = eco.ecotitle ?? "";
    bgUrl = pickImageUrl(eco.ecoimage) || "";
  } else {
    gqlError = "No ecosystem data on this page.";
  }
} catch (e: any) {
  gqlError = e?.message || "WPGraphQL fetch failed";
}
---

{title || bgUrl ? (
  <section class={`relative overflow-hidden rounded-3xl ${klass}`}>
    {bgUrl && (
      <img
        src={bgUrl}
        alt=""
        class="w-full h-[60vh] object-cover"
        loading="lazy"
      />
    )}
    <div class="absolute inset-0 bg-black/40" />

    <div class="absolute inset-0 flex items-center">
      <div class="container-primary">
        {title && (
          <h3
            class="text-2xl md:text-4xl font-bold text-white max-w-3xl"
            set:html={title}
          />
        )}
        {gqlError && (
          <p class="mt-2 text-sm text-white/80">GQL: {gqlError}</p>
        )}
      </div>
    </div>
  </section>
) : (
  <section class={`rounded-3xl bg-gray-100 h-64 grid place-items-center ${klass}`}>
    <span class="text-gray-500">
      {lang === "en" ? "No ecosystem data" : "ยังไม่มีข้อมูล Ecosystem"}
    </span>
  </section>
)}
