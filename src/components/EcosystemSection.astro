---
// src/components/EcosystemSection.astro
import { wpQuery } from "../lib/wp";
import { rewriteWpUrl } from "../lib/wpUrl";

export interface Props {
  lang: "th" | "en";
  pageUriTH?: string;
  pageUriEN?: string;
  class?: string;
  /** ปรับความสูงการ์ด: 'sm' | 'md' | 'lg' (default: 'lg') */
  size?: "sm" | "md" | "lg";
}

const {
  lang,
  pageUriTH = "/",
  pageUriEN = "/en/welcome/",
  class: klass = "",
  size = "lg",
} = Astro.props;

const uri = lang === "en" ? pageUriEN : pageUriTH;

/* ====== GQL ====== */
const QUERY = /* GraphQL */ `
  query EcosystemByUri($uri: String!) {
    nodeByUri(uri: $uri) {
      ... on Page {
        ecosystem {
          ecotitle
          ecoimage {
            node {
              sourceUrl
              mediaDetails { sizes { name sourceUrl } }
            }
          }
        }
      }
    }
  }
`;

function pickImageUrl(img: any): string | undefined {
  const node = img?.node ?? img;
  if (!node) return;
  const sizes = node.mediaDetails?.sizes ?? [];
  const prefer = ["2048x2048", "large", "1536x1536", "medium_large", "medium"];
  for (const k of prefer) {
    const hit = sizes.find((s: any) => s?.name === k && s?.sourceUrl);
    if (hit?.sourceUrl) return rewriteWpUrl(hit.sourceUrl);
  }
  return node.sourceUrl ? rewriteWpUrl(node.sourceUrl) : undefined;
}

/* ====== data ====== */
let title = "";
let bgUrl = "";
try {
  const res = await wpQuery<any>(QUERY, { uri });
  const eco = res?.nodeByUri?.ecosystem ?? null;
  title = eco?.ecotitle ?? "";
  bgUrl = pickImageUrl(eco?.ecoimage) || "";
} catch {}

/* ====== expanded size ====== */
const HEIGHT = "h-[600px] md:h-[680px] lg:h-[760px]"; // ขยายให้เท่ากับ Smart Bed
const TITLE = "text-4xl md:text-5xl lg:text-6xl";      // ขยายฟอนต์ให้ใหญ่ขึ้น
---

<section class={`${klass}`}>
  <div class="container-primary">
    <div class={`relative overflow-hidden rounded-[32px] md:rounded-[40px] ${HEIGHT}`}>
      {bgUrl ? (
        <>
          <div class="absolute inset-0 bg-contain bg-center bg-no-repeat" style={`background-image:url('${bgUrl}')`}></div>
          <div class="absolute inset-0 bg-black/40"></div>
          <div class="absolute inset-x-0 bottom-0 h-1/3 bg-gradient-to-b from-transparent to-black/35"></div>
        </>
      ) : (
        <div class="absolute inset-0 bg-gray-200" />
      )}

      <div class="relative h-full flex items-center">
        <div class="container-primary">
          {title && (
            <h3 class={`font-extrabold leading-tight text-white max-w-5xl drop-shadow-lg ${TITLE}`} set:html={title} />
          )}
        </div>
      </div>
    </div>
  </div>
</section>