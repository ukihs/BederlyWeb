---
// src/components/HeroTopSlider.astro
import { wpQuery } from "../lib/wp";
import { rewriteWpUrl } from "../lib/wpUrl";

export interface Props {
  lang: "th" | "en";
  heroTitle?: string;
  heroSubtitle?: string;
  fallbackImg?: string;
  limit?: number;
}

const {
  lang,
  heroTitle = "",
  heroSubtitle = "",
  fallbackImg = "",
  limit = 10,
} = Astro.props;

/* ---------- utils ---------- */
type Size = { name: string; sourceUrl?: string; width?: number; height?: number };
type Img = { altText?: string; sourceUrl?: string; mediaDetails?: { sizes?: Size[] } };
function normalize(img: any): Img | undefined { return img?.node ? img.node : (img ?? undefined); }
function pickImageUrl(img: any): string | undefined {
  const n = normalize(img);
  if (!n) return undefined;
  const sizes = n.mediaDetails?.sizes ?? [];
  const prefer = ["large", "medium_large", "2048x2048", "1536x1536", "medium"];
  for (const key of prefer) {
    const hit = sizes.find((s) => s?.name === key && s?.sourceUrl);
    if (hit?.sourceUrl) return rewriteWpUrl(hit.sourceUrl);
  }
  return n.sourceUrl ? rewriteWpUrl(n.sourceUrl) : undefined;
}

/* ---------- data ---------- */
const topHeroSlug = lang === "en" ? "top-en" : "top-th";

const TOP_HERO_IMAGES_QUERY = /* GraphQL */ `
  query TopHeroImages($slug: String!, $limit: Int) {
    posts(
      first: $limit
      where: { status: PUBLISH, categoryName: $slug, orderby: { field: DATE, order: ASC } }
    ) {
      nodes {
        id
        featuredImage {
          node {
            altText
            sourceUrl
            mediaDetails { sizes { name width height sourceUrl } }
          }
        }
      }
    }
  }
`;

const topHeroRes = await wpQuery<any>(TOP_HERO_IMAGES_QUERY, { slug: topHeroSlug, limit });
const heroImageUrls: string[] = (topHeroRes?.posts?.nodes ?? [])
  .map((p: any) => pickImageUrl(p?.featuredImage))
  .filter(Boolean);

// debug (ลบได้)
// console.log("Hero URLs", heroImageUrls);
---

<section id="hero" class="relative mobile-safe">
  <div class="container-primary mobile-container">
    <div class="relative overflow-hidden overflow-x-clip shadow-2xl mobile-hero-wrapper">
      {heroImageUrls.length > 0 ? (
        <!-- Carousel แบบ Fade -->
        <div
          id="hero-slider"
          class="relative w-full overflow-hidden h-[500px] sm:h-[600px] md:h-[700px] lg:h-[900px]"
        >
          <div class="slides relative h-full">
            {heroImageUrls.map((url, idx) => (
              <div
                class={`slide absolute inset-0 transition-opacity duration-1000 ease-in-out ${idx === 0 ? 'opacity-100 z-10' : 'opacity-0 z-0'}`}
              >
                <img
                  src={url}
                  alt=""
                  class="block w-full h-full object-cover object-[20%_50%] mobile-hero-img"
                  loading="eager"
                  decoding="async"
                />
                {(heroTitle || heroSubtitle) && (
                  <div class="absolute inset-0 flex items-end">
                    <div class="w-full px-responsive pb-8 sm:pb-12 md:pb-16 lg:pb-20">
                      <div class="max-w-3xl mobile-hero-content">
                        {heroTitle && (
                          <h1 class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl xl:text-7xl
                                     font-bold text-white leading-tight mb-3 sm:mb-4 text-shadow-lg mobile-hero-title">
                            {heroTitle.split('\n').map((line, i, arr) => (
                              <Fragment>
                                {line}{i < arr.length - 1 && <br/>}
                              </Fragment>
                            ))}
                          </h1>
                        )}
                        {heroSubtitle && (
                          <p class="text-base sm:text-lg md:text-xl lg:text-2xl
                                    text-white/90 leading-relaxed max-w-2xl text-shadow-md mobile-hero-subtitle">
                            {heroSubtitle}
                          </p>
                        )}
                      </div>
                    </div>
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      ) : (
        <!-- Fallback -->
        <div class="relative mobile-hero-image">
          {fallbackImg ? (
            <img src={fallbackImg} alt="" class="block w-full h-auto mobile-hero-img" loading="eager" decoding="async" />
          ) : (
            <div class="relative h-[400px] sm:h-[500px] md:h-[600px] lg:h-[700px]
                        bg-gradient-to-br from-cyan-500 to-blue-600 mobile-hero-fallback"></div>
          )}
          {(heroTitle || heroSubtitle) && (
            <div class="absolute inset-0 flex items-end">
              <div class="w-full px-responsive pb-8 sm:pb-12 md:pb-16 lg:pb-20">
                <div class="max-w-3xl mobile-hero-content">
                  {heroTitle && (
                    <h1 class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl xl:text-7xl
                               font-bold text-white leading-tight mb-3 sm:mb-4 text-shadow-lg mobile-hero-title">
                      {heroTitle}
                    </h1>
                  )}
                  {heroSubtitle && (
                    <p class="text-base sm:text-lg md:text-xl lg:text-2xl
                              text-white/90 leading-relaxed max-w-2xl text-shadow-md mobile-hero-subtitle">
                      {heroSubtitle}
                    </p>
                  )}
                </div>
              </div>
            </div>
          )}
        </div>
      )}
    </div>
  </div>
</section>

<style>
  /* ซ้อนสไลด์กัน และบังคับให้ภาพเติมเต็มกล่อง */
  #hero-slider .slides { position: relative; }
  #hero-slider .slide  { position: absolute; inset: 0; transition: opacity 1s ease-in-out; }
  #hero-slider img     { width: 100%; height: 100%; object-fit: cover; }
</style>

<script>
  // หมุนภาพแบบ fade
  const slides = Array.from(document.querySelectorAll('#hero-slider .slide'));
  if (slides.length > 0) {
    let i = 0;
    if (slides.length > 1) {
      setInterval(() => {
        const prev = slides[i];
        i = (i + 1) % slides.length;
        const next = slides[i];
        prev.classList.remove('opacity-100', 'z-10');
        prev.classList.add('opacity-0', 'z-0');
        next.classList.remove('opacity-0', 'z-0');
        next.classList.add('opacity-100', 'z-10');
      }, 5000); // เปลี่ยนทุก 5 วิ
    }
  }
</script>
