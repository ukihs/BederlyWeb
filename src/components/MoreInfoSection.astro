---
// src/components/MoreInfoSection.astro
import { wpQuery } from "../lib/wp";
import { rewriteWpUrl } from "../lib/wpUrl";

export interface Props {
  lang: "th" | "en";
  limit?: number;
  class?: string;
}

const { lang = "th", limit = 2, class: klass = "" } = Astro.props;

/* ---------- หมวดหมู่ที่ใช้ค้นหา ---------- */
const categoryCandidates =
  lang === "en"
    ? ["moreinfo-en", "moreinfo", "more-info", "Moreinfo"]
    : ["moreinfo-th", "moreinfo", "more-info", "Moreinfo"];

/* ---------- GraphQL ---------- */
const POSTS_BY_CATEGORY = /* GraphQL */ `
  query PostsByCategory($first: Int!, $category: String!) {
    posts(
      first: $first
      where: { categoryName: $category, status: PUBLISH, orderby: { field: DATE, order: DESC } }
    ) {
      nodes {
        id
        title
        uri
        excerpt
        language { code }
        featuredImage {
          node {
            altText
            sourceUrl
            mediaDetails {
              sizes { name width height sourceUrl }
            }
          }
        }
      }
    }
  }
`;

/* ---------- utils ---------- */
function pickImageUrl(node?: any) {
  if (!node) return undefined;
  const sizes = node.mediaDetails?.sizes ?? [];
  for (const n of ["2048x2048", "1536x1536", "large", "medium_large", "medium"]) {
    const s = sizes.find((x: any) => x?.name === n && x?.sourceUrl);
    if (s) return rewriteWpUrl(s.sourceUrl);
  }
  return node.sourceUrl ? rewriteWpUrl(node.sourceUrl) : undefined;
}

function stripTags(html: string = "") {
  return html.replace(/<[^>]+>/g, " ");
}

function decodeEntities(s: string = "") {
  return s
    .replace(/&nbsp;/g, " ")
    .replace(/&amp;/g, "&")
    .replace(/&lt;/g, "<")
    .replace(/&gt;/g, ">")
    .replace(/&quot;/g, '"')
    .replace(/&#039;/g, "'");
}

/* ---------- ดึงข้อมูลจาก WP ---------- */
let posts: any[] = [];

for (const cat of categoryCandidates) {
  try {
    const res = await wpQuery<any>(POSTS_BY_CATEGORY, { first: limit, category: cat });
    const found = res?.posts?.nodes ?? [];
    if (found.length) {
      posts = found;
      break;
    }
  } catch {}
}

/* ---------- fallback ถ้าไม่มีข้อมูล ---------- */
const fallbackCards = [
  {
    title: lang === "en" ? "For Businesses" : "สำหรับองค์กร",
    subtitle: "Mock text",
    href: "#",
    image:
      "https://images.unsplash.com/photo-1498050108023-c5249f4df085?q=80&w=1600&auto=format&fit=crop",
  },
  {
    title: lang === "en" ? "For Individuals" : "สำหรับบุคคลทั่วไป",
    subtitle: "Mock text",
    href: "#",
    image:
      "https://images.unsplash.com/photo-1516617442634-75371039cb3c?q=80&w=1600&auto=format&fit=crop",
  },
];
---

<section class={`section-padding bg-white ${klass}`}>
  <div class="container-primary">
    <div class="mb-8">
      <h2 class="text-4xl md:text-5xl font-extrabold text-gray-900">
        {lang === "en" ? "More Info" : "ข้อมูลเพิ่มเติม"}
      </h2>
    </div>

    <div class="grid md:grid-cols-2 gap-6">
      {(posts.length ? posts : fallbackCards)
        .slice()
        .reverse()
        .map((item) => {
          const title = item.title;
          const excerpt = item.excerpt
            ? decodeEntities(stripTags(item.excerpt)).trim()
            : item.subtitle ?? "";
          const href = item.uri ?? item.href ?? "#";

          const imgNode = item.featuredImage?.node;
          const img = imgNode ? pickImageUrl(imgNode) : item.image;

          return (
            <a href={href} class="relative overflow-hidden shadow-xl block group">
              <div class="relative aspect-[16/9]">
                <img
                  src={img}
                  alt={imgNode?.altText || title}
                  class="absolute inset-0 h-full w-full object-cover transition-transform duration-500 "
                  loading="lazy"
                  decoding="async"
                />
                <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent" />
                <div class="absolute inset-0 flex flex-col justify-end p-6">
                  {/* Title + Arrow */}
                  <div class="flex items-center gap-3 text-white font-bold">
                    <h3 class="text-2xl md:text-3xl">{title}</h3>
                    <svg
                      class="w-6 h-6 transition-transform duration-300 "
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M9 5l7 7-7 7"
                      />
                    </svg>
                  </div>

                  {/* Excerpt ใต้ Title */}
                  {excerpt && (
                    <p class="mt-2 text-sm md:text-base text-white/85 mi-excerpt">
                      {excerpt}
                    </p>
                  )}
                </div>
              </div>
            </a>
          );
        })}
    </div>
  </div>
</section>

<style>
/* ตัดบรรทัด excerpt ไม่ให้ล้น */
.mi-excerpt {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
@media (min-width: 768px) {
  .mi-excerpt {
    -webkit-line-clamp: 3;
  }
}
</style>
