---
// src/components/ProgressCarousel.astro
import { wpQuery } from "../lib/wp";
import { rewriteWpUrl } from "../lib/wpUrl";

export interface Props {
  lang: "th" | "en";
  categorySlug: string;
  limit?: number;
  class?: string;
}

const { lang, categorySlug, limit = 6, class: sectionClass = "" } = Astro.props;

const POSTS_BY_CATEGORY = /* GraphQL */ `
  query PostsByCategory($slug: String!, $limit: Int) {
    posts(
      first: $limit
      where: { status: PUBLISH, categoryName: $slug, orderby: { field: DATE, order: ASC } }
    ) {
      nodes {
        id
        title
        uri
        excerpt
        content
        featuredImage { node { altText sourceUrl mediaDetails { sizes { name sourceUrl width height } } } }
        progressExtras {
          logo1 { node { altText sourceUrl } }
          logo2 { node { altText sourceUrl } }
          logo3 { node { altText sourceUrl } }
          logo4 { node { altText sourceUrl } }
        }
      }
    }
  }
`;

type Size = { name: string; sourceUrl?: string };
type Img  = { altText?: string; sourceUrl?: string; mediaDetails?: { sizes?: Size[] } };

function normalize(img: any): Img | undefined { return img?.node ? img.node : img ?? undefined; }
function pickImageUrl(img: any): string | undefined {
  const n = normalize(img);
  if (!n) return undefined;
  const sizes = n.mediaDetails?.sizes ?? [];
  const prefer = ["large", "medium_large", "2048x2048", "1536x1536", "medium"];
  for (const key of prefer) {
    const hit = sizes.find((s) => s?.name === key && s?.sourceUrl);
    if (hit?.sourceUrl) return rewriteWpUrl(hit.sourceUrl);
  }
  return n.sourceUrl ? rewriteWpUrl(n.sourceUrl) : undefined;
}

/** แปลงเป็นข้อความล้วน เพื่อตัดพื้นหลัง/เส้นใต้จากปลั๊กอินต่าง ๆ */
function htmlToPlainText(html: string): string {
  let s = html || "";
  s = s.replace(/<\s*script[^>]*>[\s\S]*?<\s*\/\s*script\s*>/gi, "");
  s = s.replace(/<\s*style[^>]*>[\s\S]*?<\s*\/\s*style\s*>/gi, "");
  s = s.replace(/<\s*li[^>]*>/gi, "• ");
  s = s.replace(/<\s*\/\s*li\s*>/gi, "\n");
  s = s.replace(/<\s*br\s*\/?>/gi, "\n");
  s = s.replace(/<\s*\/\s*p\s*>/gi, "\n");
  s = s.replace(/<[^>]+>/g, "");
  s = s
    .replace(/&nbsp;/g, " ")
    .replace(/&amp;/g, "&")
    .replace(/&lt;/g, "<")
    .replace(/&gt;/g, ">")
    .replace(/&#8211;|&ndash;/g, "–")
    .replace(/&#8212;|&mdash;/g, "—")
    .replace(/&#8220;|&ldquo;/g, "“")
    .replace(/&#8221;|&rdquo;/g, "”")
    .replace(/&#39;|&apos;/g, "'")
    .replace(/&quot;/g, '"');
  s = s.replace(/[ \t]+\n/g, "\n").replace(/\n{2,}/g, "\n").trim();
  return s;
}

function collectLogos(p: any) {
  const pe = p?.progressExtras;
  return [pe?.logo1, pe?.logo2, pe?.logo3, pe?.logo4]
    .map((x) => x?.node).filter(Boolean)
    .map((n: any) => ({ alt: n?.altText || "logo", src: rewriteWpUrl(n?.sourceUrl || "") }))
    .filter((x) => !!x.src);
}

let posts: any[] = [];
try {
  const res = await wpQuery<any>(POSTS_BY_CATEGORY, { slug: categorySlug, limit });
  posts = res?.posts?.nodes ?? [];
} catch {}

const sectionTitle = lang === "en" ? "Our Latest Progress" : "ความคืบหน้าล่าสุดของเรา";
---

<section class={`section-padding ${sectionClass}`.trim()}>
  <div class="container-primary">
    <div class="mb-6">
      <h2 class="text-3xl md:text-4xl font-bold text-gray-900">{sectionTitle}</h2>
    </div>

    {posts.length === 0 ? (
      <div class="rounded-2xl bg-gray-50 border border-gray-200 p-8 text-gray-500">
        {lang === "en" ? "No posts in this category yet." : "ยังไม่มีโพสต์ในหมวดนี้"}
      </div>
    ) : (
      <div class="relative">
        <div id="progress-track" class="flex gap-6 overflow-x-auto snap-x snap-mandatory scroll-smooth pb-4 px-1 hide-scrollbar" aria-label={sectionTitle}>
          {posts.map((p) => {
            const imgUrl = pickImageUrl(p?.featuredImage);
            const alt    = normalize(p?.featuredImage)?.altText || p?.title || "";
            const text   = htmlToPlainText(p?.excerpt || p?.content || "");
            const logos  = collectLogos(p);

            return (
              <article class="snap-start shrink-0 w-[88%] sm:w-[70%] lg:w-[920px]">
                <div class="group block">
                  {/* card ที่เราจะ sync ความสูง */}
                  <div class="pcard rounded-[22px] overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 bg-white">
                    <div class="pcard-grid grid md:grid-cols-[1.05fr,1fr] items-stretch h-full">
                      {/* ซ้าย: รูป ยืดเต็มความสูงการ์ด */}
                      <figure class="relative h-full overflow-hidden">
                        {imgUrl ? (
                          <img src={imgUrl} alt={alt} class="w-full h-full object-cover" loading="lazy" />
                        ) : (<div class="w-full h-full bg-gray-100" />)}
                      </figure>

                      {/* ขวา: เนื้อหา + โลโก้ */}
                      <div class="flex h-full flex-col bg-[#40B4ED] text-white p-5 md:p-6 lg:p-7">
                        <h3 class="text-[16px] md:text-[18px] font-semibold mb-2 leading-tight">
                          {p?.title || ""}
                        </h3>

                        {text && (
                          <div class="text-white/95 text-[13.5px] md:text-[14px] lg:text-[15px] leading-snug whitespace-pre-line">
                            {text}
                          </div>
                        )}

                        {/* โลโก้พาร์ทเนอร์ (กลับมาแล้ว) */}
                        {logos.length > 0 && (
                          <div class="mt-4 md:mt-5 flex flex-wrap items-center gap-4 md:gap-5">
                            {logos.map((lg, i) => (
                              <div class="w-12 h-12 md:w-14 md:h-14 rounded-full bg-white/95 shadow-sm grid place-items-center overflow-hidden" aria-label={`partner-logo-${i + 1}`}>
                                <img src={lg.src} alt={lg.alt} class="max-w-[70%] max-h-[70%] object-contain" loading="lazy" />
                              </div>
                            ))}
                          </div>
                        )}
                      </div>
                    </div>
                  </div>
                </div>
              </article>
            );
          })}
        </div>

        {/* ปุ่มเลื่อน */}
        <button id="progress-prev" class="absolute -left-3 top-1/2 -translate-y-1/2 hidden md:flex items-center justify-center w-10 h-10 rounded-full bg-white shadow hover:shadow-md border text-gray-600" aria-label="Previous" type="button">
          <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" /></svg>
        </button>
        <button id="progress-next" class="absolute -right-3 top-1/2 -translate-y-1/2 hidden md:flex items-center justify-center w-10 h-10 rounded-full bg-white shadow hover:shadow-md border text-gray-600" aria-label="Next" type="button">
          <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" /></svg>
        </button>

        {/* จุดบอกตำแหน่ง */}
        <div id="progress-dots" class="mt-4 flex items-center justify-center gap-2"></div>
      </div>
    )}
  </div>
</section>

<style>
  /* ซ่อนสกอร์ลบาร์แนวนอนของแทร็ค */
  .hide-scrollbar { scrollbar-width: none; }
  .hide-scrollbar::-webkit-scrollbar { height: 0; }

  /* ให้กริดยืดเต็มการ์ดเสมอ (เพื่อ h-full ของรูป/คอนเทนต์ทำงาน) */
  .pcard { height: auto; }
  .pcard-grid { height: 100%; }
</style>

<script>
  // ====== สไลด์ & ดอท (เดิม) ======
  const track = document.getElementById("progress-track");
  if (track) {
    const prev = document.getElementById("progress-prev");
    const next = document.getElementById("progress-next");
    const dotsWrap = document.getElementById("progress-dots");

    const slides = Array.from(track.children);
    const gap = 24; // gap-6
    const slideWidth = () => slides[0]?.getBoundingClientRect().width || 300;

    dotsWrap.innerHTML = "";
    slides.forEach((_, i) => {
      const dot = document.createElement("button");
      dot.type = "button";
      dot.className = "h-2 w-2 rounded-full bg-gray-300";
      dot.addEventListener("click", () => {
        track.scrollTo({ left: i * (slideWidth() + gap), behavior: "smooth" });
      });
      dotsWrap.appendChild(dot);
    });

    const setActiveDot = (idx) => {
      dotsWrap.querySelectorAll("button").forEach((d, i) => {
        d.className = "h-2 rounded-full transition-all " + (i === idx ? "bg-blue-600 w-5" : "bg-gray-300 w-2");
      });
    };

    const updateActive = () => {
      const x = track.scrollLeft + slideWidth() / 2;
      const idx = Math.max(0, Math.min(slides.length - 1, Math.round(x / (slideWidth() + gap))));
      setActiveDot(idx);
      syncHeights(); // รีไซส์ซ้ำเมื่อสไลด์เปลี่ยนวิวพอร์ต
    };

    setActiveDot(0);
    track.addEventListener("scroll", () => requestAnimationFrame(updateActive));

    prev?.addEventListener("click", () => track.scrollBy({ left: -(slideWidth() + gap), behavior: "smooth" }));
    next?.addEventListener("click", () => track.scrollBy({ left: +(slideWidth() + gap), behavior: "smooth" }));
  }

  // ====== ทำให้การ์ดทุกใบ "สูงเท่ากัน" ======
  const cards = Array.from(document.querySelectorAll('.pcard'));
  function syncHeights() {
    if (!cards.length) return;
    // รีเซ็ตก่อนวัด
    cards.forEach(c => c.style.height = 'auto');
    // วัดความสูงที่มากสุด
    let maxH = 0;
    cards.forEach(c => { const h = c.getBoundingClientRect().height; if (h > maxH) maxH = h; });
    // ตั้งความสูงเท่ากันทุกใบ
    const px = Math.ceil(maxH) + 'px';
    cards.forEach(c => c.style.height = px);
  }

  // เรียกหลังโหลด/เปลี่ยนขนาด/โหลดรูป/ฟอนต์
  window.addEventListener('load', syncHeights);
  window.addEventListener('resize', () => { clearTimeout(window.__pc_sync); window.__pc_sync = setTimeout(syncHeights, 120); });
  document.querySelectorAll('.pcard img').forEach(img => {
    if (!img.complete) img.addEventListener('load', () => setTimeout(syncHeights, 30));
  });
  if (document.fonts && document.fonts.ready) { document.fonts.ready.then(syncHeights); }
</script>
