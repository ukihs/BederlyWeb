---
import { wpQuery } from "../lib/wp";
import { rewriteWpUrl } from "../lib/wpUrl";

export interface Props {
  lang: "th" | "en";
  categorySlug: string;
  limit?: number;
  class?: string;
}

const { lang, categorySlug, limit = 6, class: sectionClass = "" } = Astro.props;

const POSTS_BY_CATEGORY = /* GraphQL */ `
  query PostsByCategory($slug: String!, $limit: Int) {
    posts(
      first: $limit
      where: { status: PUBLISH, categoryName: $slug, orderby: { field: DATE, order: ASC } }
    ) {
      nodes {
        id
        title
        uri
        excerpt
        content
        featuredImage { node { altText sourceUrl mediaDetails { sizes { name sourceUrl width height } } } }
        progressExtras {
          logo1 { node { altText sourceUrl } }
          logo2 { node { altText sourceUrl } }
          logo3 { node { altText sourceUrl } }
          logo4 { node { altText sourceUrl } }
        }
      }
    }
  }
`;

type Size = { name: string; sourceUrl?: string };
type Img  = { altText?: string; sourceUrl?: string; mediaDetails?: { sizes?: Size[] } };

function normalize(img: any): Img | undefined { return img?.node ? img.node : img ?? undefined; }
function pickImageUrl(img: any): string | undefined {
  const n = normalize(img);
  if (!n) return undefined;
  const sizes = n.mediaDetails?.sizes ?? [];
  const prefer = ["large", "medium_large", "2048x2048", "1536x1536", "medium"];
  for (const key of prefer) {
    const hit = sizes.find((s) => s?.name === key && s?.sourceUrl);
    if (hit?.sourceUrl) return rewriteWpUrl(hit.sourceUrl);
  }
  return n.sourceUrl ? rewriteWpUrl(n.sourceUrl) : undefined;
}

/** ถอด tag + ถอดรหัส HTML entities (ทั้ง dec, hex, named) */
function htmlToPlainText(html: string): string {
  let s = html || "";

  // ตัด script/style
  s = s.replace(/<\s*script[^>]*>[\s\S]*?<\s*\/\s*script\s*>/gi, "");
  s = s.replace(/<\s*style[^>]*>[\s\S]*?<\s*\/\s*style\s*>/gi, "");

  // จัดบรรทัด
  s = s.replace(/<\s*li[^>]*>/gi, "• ");
  s = s.replace(/<\s*\/\s*li\s*>/gi, "\n");
  s = s.replace(/<\s*br\s*\/?>/gi, "\n");
  s = s.replace(/<\s*\/\s*p\s*>/gi, "\n");

  // ลบ tag ทั้งหมด
  s = s.replace(/<[^>]+>/g, "");

  // 1) numeric hex: &#x2019;
  s = s.replace(/&#x([0-9a-fA-F]+);/g, (_, h) =>
    String.fromCodePoint(parseInt(h, 16))
  );
  // 2) numeric dec: &#8217;
  s = s.replace(/&#(\d+);/g, (_, d) =>
    String.fromCodePoint(parseInt(d, 10))
  );
  // 3) named entities ที่พบบ่อย
  s = s
    .replace(/&nbsp;/g, " ")
    .replace(/&amp;/g, "&")
    .replace(/&lt;/g, "<")
    .replace(/&gt;/g, ">")
    .replace(/&quot;/g, '"')
    .replace(/&apos;/g, "'")
    .replace(/&rsquo;/g, "’")
    .replace(/&lsquo;/g, "‘")
    .replace(/&rdquo;/g, "”")
    .replace(/&ldquo;/g, "“")
    .replace(/&ndash;|&#8211;/g, "–")
    .replace(/&mdash;|&#8212;/g, "—")
    .replace(/&hellip;|&#8230;/g, "…");

  // เก็บกวาดช่องว่าง/บรรทัด
  s = s.replace(/[ \t]+\n/g, "\n").replace(/\n{2,}/g, "\n").trim();
  return s;
}

function collectLogos(p: any) {
  const pe = p?.progressExtras;
  return [pe?.logo1, pe?.logo2, pe?.logo3, pe?.logo4]
    .map((x) => x?.node).filter(Boolean)
    .map((n: any) => ({ alt: n?.altText || "logo", src: rewriteWpUrl(n?.sourceUrl || "") }))
    .filter((x) => !!x.src);
}

let posts: any[] = [];
try {
  const res = await wpQuery<any>(POSTS_BY_CATEGORY, { slug: categorySlug, limit });
  posts = res?.posts?.nodes ?? [];
} catch {}

const sectionTitle = lang === "en" ? "Our Latest Progress" : "ความคืบหน้าล่าสุดของเรา";
---

<section class={`section-padding-sm pt-0 md:pt-6 pb-0 ${sectionClass}`.trim()}>
  <div class="container-primary">
    <div class="mb-6">
      <h2 class="text-3xl md:text-4xl font-bold text-gray-900">{sectionTitle}</h2>
    </div>

    {posts.length === 0 ? (
      <div class="rounded-2xl bg-gray-50 border border-gray-200 p-8 text-gray-500">
        {lang === "en" ? "No posts in this category yet." : "ยังไม่มีโพสต์ในหมวดนี้"}
      </div>
    ) : (
      <div class="relative">
        <!-- แทร็คแนวนอนแบบลากอิสระ -->
        <div
          id="progress-track"
          class="drag-scroll flex gap-6 overflow-x-auto pb-4 px-1 hide-scrollbar select-none"
          aria-label={sectionTitle}
        >
          {posts.map((p) => {
            const imgUrl = pickImageUrl(p?.featuredImage);
            const alt    = normalize(p?.featuredImage)?.altText || p?.title || "";
            const text   = htmlToPlainText(p?.excerpt || p?.content || "");
            const logos  = collectLogos(p);

            return (
              <article class="shrink-0 w-[88%] sm:w-[70%] lg:w-[920px]">
                <div class="pcard rounded-[22px] overflow-hidden shadow-lg transition-shadow duration-300 bg-white">
                  <div class="pcard-grid grid md:grid-cols-[1.05fr,1fr] items-stretch h-full">
                    <figure class="media relative h-full overflow-hidden m-0">
                      {imgUrl ? (
                        <img src={imgUrl} alt={alt} class="block w-full h-full object-cover" loading="lazy" />
                      ) : (<div class="w-full h-full bg-gray-100" />)}
                    </figure>

                    <div class="flex h-full flex-col bg-[#40B4ED] text-white p-5 md:p-6 lg:p-7">
                      <h3 class="text-[16px] md:text-[18px] font-semibold mb-2 leading-tight">
                        {p?.title || ""}
                      </h3>

                      {text && (
                        <div class="text-white/95 text-[13.5px] md:text-[14px] lg:text-[15px] leading-snug whitespace-pre-line">
                          {text}
                        </div>
                      )}

                      {logos.length > 0 && (
                        <div class="logos-wrap mt-auto pt-4 md:pt-5 flex flex-wrap items-center gap-4 md:gap-5">
                          {logos.map((lg, i) => (
                            <div class="w-12 h-12 md:w-14 md:h-14 rounded-full bg-white/95 shadow-sm grid place-items-center overflow-hidden" aria-label={`partner-logo-${i + 1}`}>
                              <img src={lg.src} alt={lg.alt} class="max-w-[90%] max-h-[95%] object-contain" loading="lazy" />
                            </div>
                          ))}
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              </article>
            );
          })}
        </div>
      </div>
    )}
  </div>
</section>

<style>
  .hide-scrollbar { scrollbar-width: none; }
  .hide-scrollbar::-webkit-scrollbar { height: 0; }

  .pcard { height: auto; }
  .pcard-grid { height: 100%; }

  /* ทำให้ลากได้ทุกจุดของแทร็ค (รวมรูป/ตัวหนังสือ) */
  .drag-scroll { cursor: grab; user-select: none; }
  .drag-scroll.dragging { cursor: grabbing; }

  /* ปิด drag ของรูป เพื่อไม่ให้เบราว์เซอร์จับรูปไปลาก */
  .drag-scroll img {
    -webkit-user-drag: none;
    user-drag: none;
  }

  /* ===== MOBILE ONLY ===== */
  @media (max-width: 767.98px) {
    .pcard { overflow: hidden; border-radius: 22px; }
    .pcard .media { margin: 0 !important; }
    .pcard .media > img {
      display: block;
      width: 100% !important;
      height: 100% !important;
      object-fit: cover !important;
    }
    .pcard .pcard-grid { gap: 0 !important; }

    /* โลโก้ให้เลื่อนซ้าย-ขวาได้หากล้น */
    .logos-wrap {
      flex-wrap: nowrap !important;
      overflow-x: auto !important;
      -webkit-overflow-scrolling: touch;
      scrollbar-width: none;
      gap: 0.75rem !important;
      justify-content: center !important;
      padding-bottom: 0.5rem !important;
    }
    .logos-wrap::-webkit-scrollbar { display: none; }
    .logos-wrap > div { flex: 0 0 auto !important; }
  }
</style>

<script>
  // ====== Drag-to-Scroll (เมาส์) + Wheel แนวนอน ======
  const track = document.getElementById("progress-track");
  const cards = Array.from(document.querySelectorAll('.pcard'));

  if (track) {
    // ปิด dragstart ทุกรูป/ลิงก์ในแทร็ค
    track.addEventListener("dragstart", (e) => e.preventDefault());
    track.querySelectorAll("img, a, svg").forEach(el => {
      el.setAttribute?.("draggable", "false");
      el.addEventListener("dragstart", (e) => e.preventDefault());
    });

    let isDown = false;
    let startX = 0;
    let startLeft = 0;

    const down = (x) => {
      isDown = true;
      startX = x;
      startLeft = track.scrollLeft;
      track.classList.add("dragging");
    };
    const move = (x, e) => {
      if (!isDown) return;
      e?.preventDefault?.();
      track.scrollLeft = startLeft - (x - startX);
    };
    const up = () => {
      isDown = false;
      track.classList.remove("dragging");
    };

    // Mouse drag จากทุกจุด
    track.addEventListener("mousedown", (e) => down(e.pageX));
    window.addEventListener("mousemove", (e) => move(e.pageX, e));
    window.addEventListener("mouseup", up);
    track.addEventListener("mouseleave", up);

    // ล้อเมาส์เลื่อนแนวนอน (เมื่อผู้ใช้หมุนแนวตั้ง)
    track.addEventListener("wheel", (e) => {
      const absY = Math.abs(e.deltaY);
      const absX = Math.abs(e.deltaX);
      if (absY > absX) {
        track.scrollLeft += e.deltaY;
        e.preventDefault();
      }
    }, { passive: false });
  }

  // ====== ให้การ์ดสูงเท่ากันเสมอ ======
  function syncHeights() {
    if (!cards.length) return;
    cards.forEach(c => c.style.height = 'auto');
    let maxH = 0;
    cards.forEach(c => { const h = c.getBoundingClientRect().height; if (h > maxH) maxH = h; });
    const px = Math.ceil(maxH) + 'px';
    cards.forEach(c => c.style.height = px);
  }

  window.addEventListener('load', syncHeights);
  window.addEventListener('resize', () => { clearTimeout(window.__pc_sync); window.__pc_sync = setTimeout(syncHeights, 120); });
  document.querySelectorAll('.pcard img').forEach(img => {
    if (!img.complete) img.addEventListener('load', () => setTimeout(syncHeights, 30));
  });
  if (document.fonts && document.fonts.ready) { document.fonts.ready.then(syncHeights); }
</script>
