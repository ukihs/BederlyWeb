---
// src/components/SmartBedSection.astro - Full Background Version
import { wpQuery } from "../lib/wp";
import { rewriteWpUrl } from "../lib/wpUrl";

export interface Props {
  lang: "th" | "en";
}

const { lang = "th" } = Astro.props;

// แปลง lang เป็น GraphQL enum
const languageFilter = lang.toUpperCase() as "TH" | "EN";

// ใช้ URI candidates เหมือน Hero section
const uriCandidates = lang === "en" 
  ? ["/", "/home/", "/home", "/en/", "/en"]
  : ["/", "/th/", "/th", "/หน้าแรก/", "/หน้าแรก"];

type Size = { name: string; sourceUrl?: string };
type Img = { altText?: string; sourceUrl?: string; mediaDetails?: { sizes?: Size[] } };

function normalize(img: any): Img | undefined {
  return img?.node ? img.node : img ?? undefined;
}

function pickImageUrl(img: any): string | undefined {
  const n = normalize(img);
  if (!n) return undefined;
  const sizes = n.mediaDetails?.sizes ?? [];
  const prefer = ["large", "medium_large", "2048x2048", "1536x1536", "medium"];
  for (const key of prefer) {
    const hit = sizes.find((s) => s?.name === key && s?.sourceUrl);
    if (hit?.sourceUrl) return rewriteWpUrl(hit.sourceUrl);
  }
  return n.sourceUrl ? rewriteWpUrl(n.sourceUrl) : undefined;
}

// ใช้ language-specific query เหมือน Hero section แทน URI-based
const SMARTBED_LANGUAGE_QUERY = /* GraphQL */ `
  query SmartBedByLanguage($language: LanguageCodeFilterEnum!) {
    pages(
      first: 10
      where: { 
        language: $language,
        status: PUBLISH
      }
    ) {
      nodes {
        id
        title
        uri
        slug
        isFrontPage
        language {
          code
          name
        }
        smartbed {
          smartbedtitle
          smartbedsub
          smartbedimage {
            node {
              id
              altText
              sourceUrl
              mediaDetails {
                width
                height
                sizes {
                  name
                  width
                  height
                  sourceUrl
                }
              }
            }
          }
        }
      }
    }
  }
`;

// Fallback URI-based query (สำหรับกรณีที่ language-specific ไม่ได้ผล)
const SMARTBED_URI_QUERY = /* GraphQL */ `
  query SmartBedByUri($uri: String!) {
    nodeByUri(uri: $uri) {
      ... on Page {
        id
        title
        smartbed {
          smartbedtitle
          smartbedsub
          smartbedimage {
            node {
              id
              altText
              sourceUrl
              mediaDetails {
                width
                height
                sizes {
                  name
                  width
                  height
                  sourceUrl
                }
              }
            }
          }
        }
      }
    }
  }
`;

let smartbedTitle = "";
let smartbedSub = "";
let smartbedImageUrl = "";
let foundSmartbedData = false;
let debugInfo: any = {};

console.log(`[SMARTBED] Looking for Smart Bed data in language: ${languageFilter}`);

// 1. ลอง language-specific query ก่อน (วิธีหลัก)
try {
  console.log(`[SMARTBED] Trying language-specific query for: ${languageFilter}`);
  const languageData = await wpQuery<any>(SMARTBED_LANGUAGE_QUERY, { 
    language: languageFilter 
  });
  
  const pages = languageData?.pages?.nodes || [];
  console.log(`[SMARTBED] Found ${pages.length} pages for language ${languageFilter}`);
  
  // หา page ที่มี smartbed data
  let targetPage = null;
  
  // 1. หา Front Page ก่อน
  targetPage = pages.find((p: any) => p.isFrontPage && p.smartbed);
  
  // 2. หา page ที่ชื่อ "Home" หรือ "หน้าแรก"
  if (!targetPage) {
    const homeNames = lang === "en" ? ["Home", "home"] : ["หน้าแรก", "หน้าหลัก"];
    targetPage = pages.find((p: any) => 
      p.smartbed && homeNames.some(name => 
        p.title?.toLowerCase().includes(name.toLowerCase()) ||
        p.slug?.toLowerCase().includes(name.toLowerCase())
      )
    );
  }
  
  // 3. หา page ใดๆ ที่มี smartbed data
  if (!targetPage) {
    targetPage = pages.find((p: any) => p.smartbed && 
      (p.smartbed.smartbedtitle || p.smartbed.smartbedimage)
    );
  }
  
  if (targetPage?.smartbed) {
    console.log(`[SMARTBED] Found smartbed data in page: ${targetPage.title} (${targetPage.language?.code})`);
    
    const smartbed = targetPage.smartbed;
    smartbedTitle = smartbed?.smartbedtitle || smartbedTitle;
    smartbedSub = smartbed?.smartbedsub || smartbedSub;
    smartbedImageUrl = pickImageUrl(smartbed?.smartbedimage) || smartbedImageUrl;
    
    if (smartbedTitle || smartbedSub || smartbedImageUrl) {
      foundSmartbedData = true;
      debugInfo.successMethod = "language-specific";
      debugInfo.successPage = {
        title: targetPage.title,
        uri: targetPage.uri,
        language: targetPage.language?.code
      };
      debugInfo.foundData = { smartbedTitle, smartbedSub, smartbedImageUrl };
      console.log(`[SMARTBED] Success with language-specific query!`);
    }
  }
} catch (e) {
  console.warn(`[SMARTBED] Language-specific query failed:`, e);
  debugInfo.languageError = e.message;
}

// 2. ถ้ายังไม่ได้ผล ลอง URI-based query (fallback)
if (!foundSmartbedData) {
  console.log(`[SMARTBED] Trying fallback URI-based queries...`);
  
  for (const uri of uriCandidates) {
    try {
      console.log(`[SMARTBED] Trying URI: ${uri}`);
      const data = await wpQuery<any>(SMARTBED_URI_QUERY, { uri });
      const smartbed = data?.nodeByUri?.smartbed;
      
      if (!smartbed) {
        console.log(`[SMARTBED] No smartbed data found for URI: ${uri}`);
        continue;
      }

      console.log(`[SMARTBED] Found smartbed data for URI: ${uri}`, smartbed);

      smartbedTitle = smartbed?.smartbedtitle || smartbedTitle;
      smartbedSub = smartbed?.smartbedsub || smartbedSub;
      smartbedImageUrl = pickImageUrl(smartbed?.smartbedimage) || smartbedImageUrl;

      if (smartbedTitle || smartbedSub || smartbedImageUrl) {
        foundSmartbedData = true;
        debugInfo.successMethod = "uri-based";
        debugInfo.successUri = uri;
        debugInfo.foundData = { smartbedTitle, smartbedSub, smartbedImageUrl };
        console.log(`[SMARTBED] Success with URI-based query: ${uri}`);
        break;
      }
    } catch (e) {
      console.warn(`[SMARTBED] URI query failed for ${uri}:`, e);
      debugInfo.uriErrors = debugInfo.uriErrors || [];
      debugInfo.uriErrors.push({ uri, error: e.message });
    }
  }
}

console.log(`[SMARTBED] Final result:`, { foundSmartbedData, smartbedTitle, smartbedSub, smartbedImageUrl });
---

<!-- Smart Bed Section — expanded size -->
<section class="pt-12 md:pt-14 lg:pt-16 pb-2 md:pb-3 lg:pb-4 bg-white overflow-x-clip">

  <div class="container-primary smartbed-container">
    <!-- Card with increased height -->
    <div class="relative rounded-[32px] md:rounded-[40px] overflow-hidden shadow-2xl md:min-h-[680px] lg:min-h-[760px]">

      <!-- BG image covers the whole card -->
      {smartbedImageUrl ? (
        <img
          src={smartbedImageUrl}
          alt={lang === "en" ? "Smart Bed" : "เตียงอัจฉริยะ"}
          class="absolute inset-0 w-full h-full object-cover"
          loading="lazy"
        />
      ) : (
        <div class="absolute inset-0 bg-blue-200" />
      )}

      <!-- Content on top of image with increased padding -->
      <div class="relative z-10 grid lg:grid-cols-2 items-center gap-8 p-10 md:p-16 lg:p-20">
        <div class="max-w-xl lg:max-w-2xl text-white">
          <h2 class="text-4xl md:text-5xl lg:text-6xl font-bold mb-6">
            {lang === "en" ? "Smart Bed" : "เตียงอัจฉริยะ"}
          </h2>

          <h3 class="text-xl md:text-2xl lg:text-3xl font-medium mb-8">
            {smartbedTitle ||
              (lang === "en"
                ? "Innovative Care for the Ones Your loved ones"
                : "นวัตกรรมดูแลสุขภาพของคนที่คุณรัก")}
          </h3>

          <p class="text-base md:text-lg/8 lg:text-xl/9 mb-10 opacity-95">
            {smartbedSub ||
              (lang === "en"
                ? "The smart bed is an electric bed that distributes pressure and supports caregivers in repositioning patients. With IoT integration, it can be controlled remotely via smartphone. Embedded technology enhances its intelligence, enabling seamless connection and interaction with other devices."
                : "เตียงอัจฉริยะเป็นเตียงไฟฟ้าที่กระจายแรงกดและสนับสนุนผู้ดูแลในการจัดท่าผู้ป่วย ด้วยการผสาน IOT สามารถควบคุมระยะไกลผ่านสมาร์ทโฟน เทคโนโลยีฝังตัวช่วยเพิ่มความอัจฉริยะ ทำให้เชื่อมต่อและโต้ตอบกับอุปกรณ์อื่นได้อย่างราบรื่น")}
          </p>
          <a
            href="#footer"
            class="inline-flex items-center gap-2 bg-white text-cyan-700 px-8 py-4 rounded-full font-semibold text-lg hover:bg-gray-50 transition shadow-lg"
          >
            {lang === "en" ? "Contact Us" : "ติดต่อเรา"}
            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7" />
            </svg>
          </a>
        </div>

        <!-- keep empty on the right so image shows fully while text stays left -->
        <div class="hidden lg:block"></div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Mobile Only - แบบรูปตัวอย่างซ้าย กรอบฟ้าโค้งมน */
  @media (max-width: 767.98px) {
    section {
      padding: 1rem !important;
    }
    
    .smartbed-container {
      padding: 0 !important;
    }
    
    /* การ์ดสีฟ้าโค้งมน */
    .smartbed-container > div {
      background: #40B4E4 !important;
      border-radius: 2rem !important;
      min-height: auto !important;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1) !important;
      position: relative !important;
      overflow: hidden !important;
      display: flex !important;
      flex-direction: column !important;
      padding: 0 !important;
    }
    
    /* ซ่อนรูป background แบบเดิม */
    .smartbed-bg-image {
      display: none !important;
    }
    
    /* Content wrapper */
    .smartbed-content-wrapper {
      position: relative !important;
      z-index: 10 !important;
      display: flex !important;
      flex-direction: column !important;
      padding: 0 !important;
      background: transparent !important;
      gap: 0 !important;
    }
    
    /* Text content - บนสุด - ลดขนาดมากขึ้น */
    .smartbed-text-content {
      background: transparent !important;
      padding: 1.5rem 1rem 0.75rem !important; /* ลด padding ล่าง */
      max-width: 100% !important;
      width: 100% !important;
    }
    
    .smartbed-text-content h2 {
      font-size: 1.5rem !important; /* ลดจาก 1.625rem เป็น 1.5rem (24px) */
      line-height: 1.2 !important;
      margin-bottom: 0.5rem !important; /* ลด margin */
      color: white !important;
      text-shadow: none !important;
    }
    
    .smartbed-text-content h3 {
      font-size: 0.9375rem !important; /* ลดจาก 1rem เป็น 0.9375rem (15px) */
      line-height: 1.4 !important;
      margin-bottom: 0.5rem !important; /* ลด margin */
      color: white !important;
      text-shadow: none !important;
    }
    
    /* ซ่อน desktop description และ CTA */
    .smartbed-text-content .smartbed-description,
    .smartbed-desktop-cta {
      display: none !important;
    }
    
    /* แสดงรูปเตียงจาก mobile-image - ลดขนาดลง */
    .smartbed-mobile-image {
      display: block !important;
      width: 100% !important;
      position: relative !important;
      padding: 0 !important;
      margin: 0 !important;
      max-height: 200px !important; /* จำกัดความสูงของรูป */
      overflow: hidden !important;
    }
    
    .smartbed-mobile-image img {
      width: 100% !important;
      height: auto !important;
      display: block !important;
      max-width: 100% !important;
      max-height: 200px !important; /* จำกัดความสูง */
      object-fit: contain !important;
    }
    
    /* Mobile bottom section - description + CTA */
    .smartbed-mobile-bottom {
      display: flex !important;
      flex-direction: column !important;
      padding: 0 !important;
    }
    
    /* Mobile description - ลดขนาดมากขึ้น */
    .smartbed-mobile-description {
      font-size: 0.75rem !important; /* ลดจาก 0.8125rem เป็น 0.75rem (12px) */
      line-height: 1.6 !important;
      padding: 0.75rem 1rem !important; /* ลด padding */
      color: white !important;
      margin: 0 !important;
    }
    
    /* ปุ่มอยู่ล่างสุด */
    .smartbed-mobile-cta {
      display: flex !important;
      justify-content: center !important;
      padding: 0.5rem 1rem 1.5rem !important; /* ลด padding */
    }
    
    .smartbed-mobile-cta a {
      padding: 0.75rem 2rem !important; /* ลดขนาดปุ่ม */
      font-size: 0.9375rem !important; /* ลดขนาดฟอนต์ปุ่ม */
      background: white !important;
      color: #40B4E4 !important;
      border-radius: 9999px !important;
      display: inline-flex !important;
      align-items: center !important;
      gap: 0.5rem !important;
      font-weight: 600 !important;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1) !important;
    }
    
    /* ซ่อน empty div ที่ใช้บน desktop */
    .smartbed-content-wrapper > div:last-child:empty {
      display: none !important;
    }
  }
</style>